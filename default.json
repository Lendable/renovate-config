{
    "extends": [
        "config:base",
        ":enableVulnerabilityAlerts",
        ":semanticCommitsDisabled",
        ":prHourlyLimitNone",
        ":prImmediately"
    ],
    "automerge": true,
    "automergeStrategy": "squash",
    "automergeType": "pr",
    "lockFileMaintenance": {
        "enabled": true,
        "schedule": "before 11am every day"
    },
    "platformAutomerge": true,
    "rangeStrategy": "in-range-only",
    "rebaseWhen": "conflicted",
    "customManagers": [
        {
            "customType": "regex",
            "fileMatch": [
                "^.github/(?:workflows|actions)/.+\\.ya?ml$"
            ],
            "matchStrings": [
                "run:\\s+curl\\s+-sS\\s+https:\\/\\/getcomposer\\.org\\/installer\\s+\\|\\s+php\\s+--\\s+.+--filename=composer\\s+--version=\\s*[\"']?(?<currentValue>.+?)[\"']?\\s"
            ],
            "depNameTemplate": "composer/composer",
            "datasourceTemplate": "github-releases"
        },
        {
            "customType": "regex",
            "fileMatch": [
                "^Dockerfile$"
            ],
            "matchStrings": [
                "RUN\\s+curl\\s+-sS\\s+https:\\/\\/getcomposer\\.org\\/installer\\s+\\|\\s+php\\s+--\\s+.+--filename=composer\\s+--version=\\s*[\"']?(?<currentValue>.+?)[\"']?\\s"
            ],
            "depNameTemplate": "composer/composer",
            "datasourceTemplate": "github-releases"
        }
    ],
    "packageRules": [
        {
            "matchPackagePatterns": ["*"],
            "enabled": false
        },
        {
            "matchManagers": ["docker-compose", "dockerfile"],
            "enabled": true,
            "groupName": "docker",
            "rangeStrategy": "bump"
        },
        {
            "matchManagers": ["composer"],
            "matchDepTypes": ["require"],
            "enabled": true,
            "groupName": "Composer runtime dependencies",
            "groupSlug": "composer-runtime"
        },
        {
            "matchManagers": ["composer"],
            "matchDepTypes": ["require-dev"],
            "enabled": true,
            "groupName": "Composer dev dependencies",
            "groupSlug": "composer-dev"
        },
        {
            "matchManagers": ["composer"],
            "matchDepTypes": ["require-dev"],
            "enabled": true,
            "matchPackageNames": [
                "amphp/phpunit-util",
                "behat/behat",
                "friends-of-behat/mink-extension",
                "friends-of-behat/symfony-extension",
                "friendsofphp/php-cs-fixer",
                "ekino/phpstan-banned-code",
                "ergebnis/composer-normalize",
                "ergebnis/phpstan-rules",
                "infection/infection",
                "kubawerlos/php-cs-fixer-custom-fixers",
                "lendable/composer-license-checker",
                "maglnet/composer-require-checker",
                "matthiasnoback/symfony-config-test",
                "matthiasnoback/symfony-dependency-injection-test",
                "mikey179/vfsstream",
                "php-cs-fixer/shim",
                "php-parallel-lint/php-parallel-lint",
                "phparkitect/phparkitect",
                "phpunit/phpunit",
                "qossmic/deptrac",
                "qossmic/deptrac-shim",
                "rector/rector",
                "roave/infection-static-analysis-plugin",
                "staabm/phpstan-dba",
                "thecodingmachine/phpstan-safe-rule",
                "vimeo/psalm"
            ],
            "matchPackagePatterns": [
                "phpstan/*",
                "psalm/*"
            ],
            "rangeStrategy": "bump",
            "groupName": "Composer dev tooling dependencies",
            "groupSlug": "composer-dev-tooling"
        },
        {
            "matchManagers": ["composer"],
            "matchPackageNames": ["datadog/dd-trace"],
            "enabled": false
        },
        {
            "matchManagers": ["composer"],
            "matchPackagePatterns": ["symfony/*"],
            "matchUpdateTypes": ["minor"],
            "enabled": false
        },
        {
            "matchManagers": ["npm"],
            "matchDepTypes": ["dependencies"],
            "groupName": "npm runtime dependencies",
            "groupSlug": "npm-runtime",
            "enabled": true
        },
        {
            "matchManagers": ["npm"],
            "matchDepTypes": ["devDependencies"],
            "groupName": "npm dev dependencies",
            "groupSlug": "npm-dev",
            "enabled": true
        },
        {
            "matchManagers": ["github-actions"],
            "enabled": true,
            "groupName": "GitHub Actions dependencies",
            "groupSlug": "github-actions",
            "rangeStrategy": "bump"
        },
        {
            "matchManagers": ["poetry"],
            "enabled": true,
            "groupName": "Poetry dependencies",
            "groupSlug": "poetry"
        },
        {
            "matchManagers": ["pyenv"],
            "enabled": true,
            "groupName": "Pyenv dependencies",
            "groupSlug": "pyenv"
        },
        {
            "matchManagers": ["pip_requirements"],
            "enabled": true,
            "groupName": "pip dependencies",
            "groupSlug": "pip"
        },
        {
            "matchDatasources": ["github-releases"],
            "matchPackageNames": ["composer/composer"],
            "enabled": true,
            "rangeStrategy": "bump"
        },
        {
            "matchDatasources": ["docker"],
            "matchPackageNames": [
                "alpine",
                "golang",
                "bitnami/mysql",
                "mysql",
                "public.ecr.aws/docker/library/mysql",
                "nginx",
                "node",
                "public.ecr.aws/docker/library/node",
                "php",
                "public.ecr.aws/docker/library/php",
                "lendableuk/php-fpm-alpine",
                "lendableuk/php-cli-alpine",
                "postgres",
                "public.ecr.aws/docker/library/postgres",
                "rabbitmq",
                "public.ecr.aws/docker/library/rabbitmq",
                "thecodingmachine/gotenberg",
                "traefik"
            ],
            "matchUpdateTypes": ["major", "minor"],
            "enabled": false
        }
    ]
}
